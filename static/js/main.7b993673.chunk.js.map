{"version":3,"sources":["components/Filters/Filters.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","App.js","index.js"],"names":["Filters","todos","setTypeFilter","useEffect","className","length","console","log","href","onClick","event","target","innerText","type","Todo","id","completed","changeProcessTodo","classNames","view","onChange","checked","TodoList","map","todo","key","App","useState","currentTitleValue","setCurrentTitleValue","setTodos","visibleTodos","setVisibleTodos","typeFilter","todoId","every","item","filter","onSubmit","preventDefault","placeholder","value","onKeyDown","Date","now","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b993673.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\n\nexport const Filters = ({ todos, setTypeFilter }) => {\n\n  useEffect(() => {\n    function test () {\n      todos.map()\n    }\n  }, [todos]);\n\n  return (\n    <>\n      <span className=\"todo-count\">\n        {`${todos.length} items left`}\n      </span>\n      {console.log(todos)}\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className=\"selected\"\n            onClick={event => setTypeFilter(event.target.innerText)}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            onClick={event => setTypeFilter(event.target.innerText)}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            onClick={event => setTypeFilter(event.target.innerText)}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={event => setTypeFilter(event.target.innerText)}\n      >\n        Clear completed\n      </button>\n    </>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nexport const Todo = ({ todos, id, completed, changeProcessTodo }) => {\n\n  return (\n    <li className={classNames({\n      view: !completed,\n      completed,\n    })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          onChange={() => changeProcessTodo(id)}\n          checked={completed}\n        />\n        <label>{todos}</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n      {/* <li>\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>asdfghj</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n    <li className=\"completed\">\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>qwertyuio</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n    <li className=\"editing\">\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>zxcvbnm</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n\n    <li>\n      <div className=\"view\">\n        <input type=\"checkbox\" className=\"toggle\" />\n        <label>1234567890</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li> */}\n    </li>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = ({ todos, changeProcessTodo }) => {\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          key={todo.id}\n          {...todo}\n          changeProcessTodo={changeProcessTodo}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Filters } from './components/Filters/Filters';\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction App() {\n  const [currentTitleValue, setCurrentTitleValue] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [visibleTodos, setVisibleTodos] = useState([]);\n  const [typeFilter, setTypeFilter] = useState('All');\n\n  function addTodo(todo) {\n    setTodos([\n      ...todos,\n      {\n        todo,\n        id: Date.now(),\n        todos: currentTitleValue,\n        completed: false,\n      },\n    ]);\n    setCurrentTitleValue('');\n  }\n\n  useEffect(() => {\n    setVisibleTodos([\n      todos,\n    ]);\n  }, [todos]);\n\n  function changeProcessTodo(todoId) {\n    if (typeof todoId === 'number') {\n      setTodos(todos.map((todo) => {\n        if (todo.id === todoId) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }));\n    } else {\n      setTodos(todos.map(todo => (\n        todos.every(item => (item.completed))\n          ? ({\n            ...todo,\n            completed: false,\n          })\n          : ({\n            ...todo,\n            completed: true,\n          })\n      )));\n    }\n  }\n\n  useEffect(() => {\n    switch (typeFilter) {\n      case 'All':\n        setVisibleTodos(todos);\n        break;\n      case 'Active':\n        setVisibleTodos(todos.filter(item => !item.completed));\n        break;\n      case 'Completed':\n        setVisibleTodos(todos.filter(item => item.completed));\n        break;\n      case 'Clear completed':\n        setVisibleTodos(visibleTodos.filter(item => item.completed));\n        setTodos(visibleTodos);\n        break;\n      default:\n        break;\n    }\n  }, [typeFilter, todos]);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos App</h1>\n\n        <form onSubmit={(event) => {\n          event.preventDefault();\n        }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={currentTitleValue}\n            onChange={({ target }) => setCurrentTitleValue(target.value)}\n            onKeyDown={(event) => {\n              (event.key === 'Enter') && (addTodo(currentTitleValue));\n            }}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onClick={() => changeProcessTodo()}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodoList\n          todos={visibleTodos}\n          changeProcessTodo={changeProcessTodo}\n        />\n      </section>\n      {(todos.length > 0)\n        && (\n          <footer className=\"footer\">\n            <Filters\n              todos={visibleTodos}\n              setTypeFilter={setTypeFilter}\n            />\n          </footer>\n        )\n      }\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}